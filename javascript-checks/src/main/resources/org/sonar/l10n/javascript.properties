rule.js.CurlyBraces.name=Always use curly braces for if/else/for/while/do statements
rule.js.DebuggerStatement.name=Debugger statement must not be used
rule.js.TrailingComma.name=Trailing comma
rule.js.Semicolon.name=Each statement must end with a semicolon
rule.js.OneStatementPerLine.name=Do not use more that one statement per line
rule.js.SingleQuote.name=Use single quote for string literals
rule.js.Eval.name=Avoid use of eval
rule.js.BitwiseOperators.name=Do not use bitwise operators
rule.js.FunctionComplexity.name=Avoid too complex function
rule.js.FunctionComplexity.param.maximumFunctionComplexityThreshold=The maximum authorized complexity in function
rule.js.MultilineStringLiterals.name=Avoid multiline string literals
rule.js.ParsingError.name=JavaScript parser failure
rule.js.CommentRegularExpression.name=Regular expression on comment
rule.js.CommentRegularExpression.param.regularExpression=The regular expression
rule.js.CommentRegularExpression.param.message=The violation message
rule.js.XPath.name=XPath rule
rule.js.XPath.param.xpathQuery=The XPath query
rule.js.XPath.param.message=The violation message
rule.js.CommentedCode.name=Sections of code should not be "commented out"
rule.js.ArrayAndObjectConstructors.name=Do not use Array and Object constructors
rule.js.PrimitiveWrappers.name=Do not use wrapper objects for primitive types
rule.js.WithStatement.name=With statement must not be used
rule.js.ForIn.name=For-in statement must filter items
rule.js.LineLength.name=Maximum authorized line length exceeded
rule.js.LineLength.param.maximumLineLength=The maximum authorized line length
rule.js.EqEqEq.name=Avoid use of == and != in favor of === and !==
rule.js.FunctionDeclarationsWithinBlocks.name=Do not use function declarations within blocks
rule.js.AssignmentWithinCondition.name=Avoid doing assignments in the condition part of if/while/for statements
rule.js.LabelPlacement.name=Only while/do/for statements can be labelled
